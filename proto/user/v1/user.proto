syntax = "proto3";

package proto.user.v1;

enum StatusCode {
  STATUS_CODE_OK_UNSPECIFIED = 0;                   // gRPC best practice: start enums at 0
  STATUS_CODE_REFRESHED = 1;
  STATUS_CODE_SESSION_EXPIRED = 2;
  STATUS_CODE_SESSION_NOT_FOUND = 3;
  STATUS_CODE_SERVER_ERROR = 4;
  STATUS_CODE_DATA_NOT_FOUND = 5;
  STATUS_CODE_BAD_REQUEST = 6;
  STATUS_CODE_UNAUTHORIZED = 7;
}

// The UserService handles identity-related actions for internal service communication.
service UserService {
  // Updates the current plan associated with a user.
  //
  // Typically called by the PlanService when a user subscribes to,
  // upgrades, or cancels a plan.
  
  rpc GetUserDetailsFromSession(GetUserDetailsFromSessionRequest) returns (GetUserDetailsFromSessionResponse);
  rpc GetUserSettings(GetUserSettingsRequest) returns (GetUserSettingsResponse);

}


message GetUserDetailsFromSessionRequest {
  string session_id = 1;
}

message GetUserDetailsFromSessionResponse {
  bool success = 1;

  optional string auth0_id = 2;

  optional string role = 3;

  repeated string permissions = 4;

  optional string error_message = 5;

  StatusCode code = 6;

  

}

message GetUserSettingsRequest {
  string auth0_id = 1;
}

message GetUserSettingsResponse {
  bool success = 1;
  
  map<string, string> settings = 2;
  optional string error_message = 3;
  StatusCode code = 4;
  

}